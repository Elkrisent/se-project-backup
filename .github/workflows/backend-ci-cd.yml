# ==================================================
# FILE: .github/workflows/backend-ci-cd.yml
# Backend CI/CD Pipeline - Runs tests and deploys
# ==================================================
name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: fundraising_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run linter
        working-directory: ./backend
        run: npm run lint || echo "No lint script found"

      - name: Run tests
        working-directory: ./backend
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/fundraising_test
          JWT_SECRET: test_jwt_secret_key_12345
        run: npm test

      - name: Generate coverage report
        working-directory: ./backend
        run: npm run test:coverage || echo "No coverage script"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage/lcov.info
          flags: backend

  deploy:
    name: Deploy Backend
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway/Render
        run: |
          echo "ðŸš€ Deploying backend to production..."
          # Railway deployment (if using Railway CLI)
          # npm install -g @railway/cli
          # railway up --service backend
          
          # OR use Railway GitHub integration (recommended)
          echo "Using Railway GitHub integration for deployment"
          
      - name: Notify deployment status
        if: always()
        run: |
          echo "Backend deployment completed"
          # Add Slack/Discord notification here if needed
